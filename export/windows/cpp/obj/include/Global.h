// Generated by Haxe 3.3.0
#ifndef INCLUDED_Global
#define INCLUDED_Global

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Global)
HX_DECLARE_CLASS2(flixel,math,FlxPoint)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS2(flixel,util,IFlxPooled)



class HXCPP_CLASS_ATTRIBUTES Global_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Global_obj OBJ_;
		Global_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="Global")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"Global"); }
		static hx::ObjectPtr< Global_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Global_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("Global","\x83","\xa5","\x46","\xdc"); }

		static void __boot();
		static  ::flixel::math::FlxPoint PlanetPos;
		static  ::flixel::math::FlxPoint PlanetSize;
		static Float Surface;
		static Bool Halt;
		static Int Wrench;
		static Int FuelCell;
		static Int Fin;
		static Int NoseCap;
		static Bool TrapDoorJustOpened;
		static Bool CodeDoorJustOpened;
		static Bool TNT;
		static void init();
		static ::Dynamic init_dyn();

		static Float modCiel(Float x);
		static ::Dynamic modCiel_dyn();

};


#endif /* INCLUDED_Global */ 
