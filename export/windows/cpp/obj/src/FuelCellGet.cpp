// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_FuelCellGet
#include <FuelCellGet.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
#ifndef INCLUDED_flixel_FlxSubState
#include <flixel/FlxSubState.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_input_FlxInput
#include <flixel/input/FlxInput.h>
#endif
#ifndef INCLUDED_flixel_input_FlxPointer
#include <flixel/input/FlxPointer.h>
#endif
#ifndef INCLUDED_flixel_input_IFlxInput
#include <flixel/input/IFlxInput.h>
#endif
#ifndef INCLUDED_flixel_input_IFlxInputManager
#include <flixel/input/IFlxInputManager.h>
#endif
#ifndef INCLUDED_flixel_input_mouse_FlxMouse
#include <flixel/input/mouse/FlxMouse.h>
#endif
#ifndef INCLUDED_flixel_input_mouse_FlxMouseButton
#include <flixel/input/mouse/FlxMouseButton.h>
#endif
#ifndef INCLUDED_flixel_math_FlxPoint
#include <flixel/math/FlxPoint.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxPooled
#include <flixel/util/IFlxPooled.h>
#endif
#ifndef INCLUDED_flixel_util__FlxColor_FlxColor_Impl_
#include <flixel/util/_FlxColor/FlxColor_Impl_.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif


void FuelCellGet_obj::__construct( ::flixel::FlxState parent){
            	HX_STACK_FRAME("FuelCellGet","new",0x8226a710,"FuelCellGet.new","FuelCellGet.hx",13,0x7b6aea60)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(parent,"parent")
HXLINE(  24)		this->selected = (int)0;
HXLINE(  28)		HX_VARI( Int,color) = ::flixel::util::_FlxColor::FlxColor_Impl__obj::_new(null());
HXDLIN(  28)		{
HXLINE(  28)			hx::AndEq(color,(int)-16711681);
HXDLIN(  28)			hx::OrEq(color,(int)6946816);
            		}
HXDLIN(  28)		{
HXLINE(  28)			hx::AndEq(color,(int)-65281);
HXDLIN(  28)			hx::OrEq(color,(int)27136);
            		}
HXDLIN(  28)		{
HXLINE(  28)			hx::AndEq(color,(int)-256);
HXDLIN(  28)			hx::OrEq(color,(int)106);
            		}
HXDLIN(  28)		{
HXLINE(  28)			hx::AndEq(color,(int)16777215);
HXDLIN(  28)			hx::OrEq(color,(int)-16777216);
            		}
HXDLIN(  28)		super::__construct(color);
HXLINE(  29)		this->add( ::flixel::FlxSprite_obj::__new((int)0,(int)0,HX_("assets/images/FUELCELLBG.png",83,14,02,1f)));
HXLINE(  31)		this->yep1 =  ::flixel::FlxSprite_obj::__new((int)375,(int)180,null());
HXLINE(  32)		this->yep1->makeGraphic((int)40,(int)40,(int)-16711936,null(),null());
HXLINE(  33)		this->yep1->set_visible(false);
HXLINE(  34)		this->add(this->yep1);
HXLINE(  35)		this->yep2 =  ::flixel::FlxSprite_obj::__new((int)660,(int)180,null());
HXLINE(  36)		this->yep2->makeGraphic((int)40,(int)40,(int)-16711936,null(),null());
HXLINE(  37)		this->yep2->set_visible(false);
HXLINE(  38)		this->add(this->yep2);
HXLINE(  39)		this->yep3 =  ::flixel::FlxSprite_obj::__new((int)1010,(int)180,null());
HXLINE(  40)		this->yep3->makeGraphic((int)40,(int)40,(int)-16711936,null(),null());
HXLINE(  41)		this->yep3->set_visible(false);
HXLINE(  42)		this->add(this->yep3);
HXLINE(  44)		this->nop1 =  ::flixel::FlxSprite_obj::__new((int)375,(int)180,null());
HXLINE(  45)		this->nop1->makeGraphic((int)40,(int)40,(int)-65536,null(),null());
HXLINE(  46)		this->nop1->set_visible(false);
HXLINE(  47)		this->add(this->nop1);
HXLINE(  48)		this->nop2 =  ::flixel::FlxSprite_obj::__new((int)660,(int)180,null());
HXLINE(  49)		this->nop2->makeGraphic((int)40,(int)40,(int)-65536,null(),null());
HXLINE(  50)		this->nop2->set_visible(false);
HXLINE(  51)		this->add(this->nop2);
HXLINE(  52)		this->nop3 =  ::flixel::FlxSprite_obj::__new((int)1010,(int)180,null());
HXLINE(  53)		this->nop3->makeGraphic((int)40,(int)40,(int)-65536,null(),null());
HXLINE(  54)		this->nop3->set_visible(false);
HXLINE(  55)		this->add(this->nop3);
HXLINE(  57)		this->Parent = parent;
HXLINE(  58)		this->Parent->persistentUpdate = false;
            	}

Dynamic FuelCellGet_obj::__CreateEmpty() { return new FuelCellGet_obj; }

hx::ObjectPtr< FuelCellGet_obj > FuelCellGet_obj::__new( ::flixel::FlxState parent)
{
	hx::ObjectPtr< FuelCellGet_obj > _hx_result = new FuelCellGet_obj();
	_hx_result->__construct(parent);
	return _hx_result;
}

Dynamic FuelCellGet_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< FuelCellGet_obj > _hx_result = new FuelCellGet_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

void FuelCellGet_obj::update(Float elapsed){
            	HX_STACK_FRAME("FuelCellGet","update",0x5c71fd59,"FuelCellGet.update","FuelCellGet.hx",62,0x7b6aea60)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(elapsed,"elapsed")
HXLINE(  63)		Bool _hx_tmp = (::flixel::FlxG_obj::mouse->_leftButton->current == (int)2);
HXDLIN(  63)		if (_hx_tmp) {
HXLINE(  66)			Bool _hx_tmp1;
HXDLIN(  66)			Bool _hx_tmp2;
HXDLIN(  66)			Bool _hx_tmp3;
HXDLIN(  66)			Bool _hx_tmp4 = (::flixel::FlxG_obj::mouse->getPosition(null())->x > (int)240);
HXDLIN(  66)			if (_hx_tmp4) {
HXLINE(  66)				_hx_tmp3 = (::flixel::FlxG_obj::mouse->getPosition(null())->x < (int)390);
            			}
            			else {
HXLINE(  66)				_hx_tmp3 = false;
            			}
HXDLIN(  66)			if (_hx_tmp3) {
HXLINE(  66)				_hx_tmp2 = (::flixel::FlxG_obj::mouse->getPosition(null())->y > (int)54);
            			}
            			else {
HXLINE(  66)				_hx_tmp2 = false;
            			}
HXDLIN(  66)			if (_hx_tmp2) {
HXLINE(  66)				_hx_tmp1 = (::flixel::FlxG_obj::mouse->getPosition(null())->y < (int)220);
            			}
            			else {
HXLINE(  66)				_hx_tmp1 = false;
            			}
HXDLIN(  66)			if (_hx_tmp1) {
HXLINE(  69)				::haxe::Log_obj::trace(HX_("socket 1",84,3a,c7,2d),hx::SourceInfo(HX_("FuelCellGet.hx",60,ea,6a,7b),69,HX_("FuelCellGet",1e,1f,6a,34),HX_("update",09,86,05,87)));
HXLINE(  70)				Bool _hx_tmp5 = (this->selected == (int)2);
HXDLIN(  70)				if (_hx_tmp5) {
HXLINE(  72)					this->yep1->set_visible(true);
HXLINE(  73)					this->nop1->set_visible(false);
            				}
            				else {
HXLINE(  77)					this->nop1->set_visible(true);
HXLINE(  78)					this->yep1->set_visible(false);
            				}
            			}
            			else {
HXLINE(  81)				Bool _hx_tmp6;
HXDLIN(  81)				Bool _hx_tmp7;
HXDLIN(  81)				Bool _hx_tmp8;
HXDLIN(  81)				Bool _hx_tmp9 = (::flixel::FlxG_obj::mouse->getPosition(null())->x > (int)530);
HXDLIN(  81)				if (_hx_tmp9) {
HXLINE(  81)					_hx_tmp8 = (::flixel::FlxG_obj::mouse->getPosition(null())->x < (int)620);
            				}
            				else {
HXLINE(  81)					_hx_tmp8 = false;
            				}
HXDLIN(  81)				if (_hx_tmp8) {
HXLINE(  81)					_hx_tmp7 = (::flixel::FlxG_obj::mouse->getPosition(null())->y > (int)54);
            				}
            				else {
HXLINE(  81)					_hx_tmp7 = false;
            				}
HXDLIN(  81)				if (_hx_tmp7) {
HXLINE(  81)					_hx_tmp6 = (::flixel::FlxG_obj::mouse->getPosition(null())->y < (int)220);
            				}
            				else {
HXLINE(  81)					_hx_tmp6 = false;
            				}
HXDLIN(  81)				if (_hx_tmp6) {
HXLINE(  84)					::haxe::Log_obj::trace(HX_("socket 2",85,3a,c7,2d),hx::SourceInfo(HX_("FuelCellGet.hx",60,ea,6a,7b),84,HX_("FuelCellGet",1e,1f,6a,34),HX_("update",09,86,05,87)));
HXLINE(  85)					::haxe::Log_obj::trace(this->selected,hx::SourceInfo(HX_("FuelCellGet.hx",60,ea,6a,7b),85,HX_("FuelCellGet",1e,1f,6a,34),HX_("update",09,86,05,87)));
HXLINE(  86)					Bool _hx_tmp10 = (this->selected == (int)1);
HXDLIN(  86)					if (_hx_tmp10) {
HXLINE(  88)						this->yep2->set_visible(true);
HXLINE(  89)						this->nop2->set_visible(false);
            					}
            					else {
HXLINE(  93)						this->nop2->set_visible(true);
HXLINE(  94)						this->yep2->set_visible(false);
            					}
            				}
            				else {
HXLINE(  97)					Bool _hx_tmp11;
HXDLIN(  97)					Bool _hx_tmp12;
HXDLIN(  97)					Bool _hx_tmp13;
HXDLIN(  97)					Bool _hx_tmp14 = (::flixel::FlxG_obj::mouse->getPosition(null())->x > (int)900);
HXDLIN(  97)					if (_hx_tmp14) {
HXLINE(  97)						_hx_tmp13 = (::flixel::FlxG_obj::mouse->getPosition(null())->x < (int)980);
            					}
            					else {
HXLINE(  97)						_hx_tmp13 = false;
            					}
HXDLIN(  97)					if (_hx_tmp13) {
HXLINE(  97)						_hx_tmp12 = (::flixel::FlxG_obj::mouse->getPosition(null())->y > (int)54);
            					}
            					else {
HXLINE(  97)						_hx_tmp12 = false;
            					}
HXDLIN(  97)					if (_hx_tmp12) {
HXLINE(  97)						_hx_tmp11 = (::flixel::FlxG_obj::mouse->getPosition(null())->y < (int)220);
            					}
            					else {
HXLINE(  97)						_hx_tmp11 = false;
            					}
HXDLIN(  97)					if (_hx_tmp11) {
HXLINE( 100)						::haxe::Log_obj::trace(HX_("socket 3",86,3a,c7,2d),hx::SourceInfo(HX_("FuelCellGet.hx",60,ea,6a,7b),100,HX_("FuelCellGet",1e,1f,6a,34),HX_("update",09,86,05,87)));
HXLINE( 101)						Bool _hx_tmp15 = (this->selected == (int)3);
HXDLIN( 101)						if (_hx_tmp15) {
HXLINE( 103)							this->yep3->set_visible(true);
HXLINE( 104)							this->nop3->set_visible(false);
            						}
            						else {
HXLINE( 108)							this->nop3->set_visible(true);
HXLINE( 109)							this->yep3->set_visible(false);
            						}
            					}
            				}
            			}
HXLINE( 113)			Bool _hx_tmp16;
HXDLIN( 113)			Bool _hx_tmp17;
HXDLIN( 113)			if (this->yep1->visible) {
HXLINE( 113)				_hx_tmp17 = this->yep2->visible;
            			}
            			else {
HXLINE( 113)				_hx_tmp17 = false;
            			}
HXDLIN( 113)			if (_hx_tmp17) {
HXLINE( 113)				_hx_tmp16 = this->yep3->visible;
            			}
            			else {
HXLINE( 113)				_hx_tmp16 = false;
            			}
HXDLIN( 113)			if (_hx_tmp16) {
HXLINE( 115)				this->Parent->persistentUpdate = true;
HXLINE( 116)				this->close();
            			}
HXLINE( 119)			Bool _hx_tmp18;
HXDLIN( 119)			Bool _hx_tmp19;
HXDLIN( 119)			Bool _hx_tmp20;
HXDLIN( 119)			Bool _hx_tmp21 = (::flixel::FlxG_obj::mouse->getPosition(null())->x > (int)100);
HXDLIN( 119)			if (_hx_tmp21) {
HXLINE( 119)				_hx_tmp20 = (::flixel::FlxG_obj::mouse->getPosition(null())->x < (int)172);
            			}
            			else {
HXLINE( 119)				_hx_tmp20 = false;
            			}
HXDLIN( 119)			if (_hx_tmp20) {
HXLINE( 119)				_hx_tmp19 = (::flixel::FlxG_obj::mouse->getPosition(null())->y > (int)365);
            			}
            			else {
HXLINE( 119)				_hx_tmp19 = false;
            			}
HXDLIN( 119)			if (_hx_tmp19) {
HXLINE( 119)				_hx_tmp18 = (::flixel::FlxG_obj::mouse->getPosition(null())->y < (int)720);
            			}
            			else {
HXLINE( 119)				_hx_tmp18 = false;
            			}
HXDLIN( 119)			if (_hx_tmp18) {
HXLINE( 122)				::haxe::Log_obj::trace(HX_("plug 1",df,4a,e3,44),hx::SourceInfo(HX_("FuelCellGet.hx",60,ea,6a,7b),122,HX_("FuelCellGet",1e,1f,6a,34),HX_("update",09,86,05,87)));
HXLINE( 123)				this->selected = (int)1;
            			}
            			else {
HXLINE( 125)				Bool _hx_tmp22;
HXDLIN( 125)				Bool _hx_tmp23;
HXDLIN( 125)				Bool _hx_tmp24;
HXDLIN( 125)				Bool _hx_tmp25 = (::flixel::FlxG_obj::mouse->getPosition(null())->x > (int)765);
HXDLIN( 125)				if (_hx_tmp25) {
HXLINE( 125)					_hx_tmp24 = (::flixel::FlxG_obj::mouse->getPosition(null())->x < (int)850);
            				}
            				else {
HXLINE( 125)					_hx_tmp24 = false;
            				}
HXDLIN( 125)				if (_hx_tmp24) {
HXLINE( 125)					_hx_tmp23 = (::flixel::FlxG_obj::mouse->getPosition(null())->y > (int)370);
            				}
            				else {
HXLINE( 125)					_hx_tmp23 = false;
            				}
HXDLIN( 125)				if (_hx_tmp23) {
HXLINE( 125)					_hx_tmp22 = (::flixel::FlxG_obj::mouse->getPosition(null())->y < (int)720);
            				}
            				else {
HXLINE( 125)					_hx_tmp22 = false;
            				}
HXDLIN( 125)				if (_hx_tmp22) {
HXLINE( 128)					::haxe::Log_obj::trace(HX_("plug 2",e0,4a,e3,44),hx::SourceInfo(HX_("FuelCellGet.hx",60,ea,6a,7b),128,HX_("FuelCellGet",1e,1f,6a,34),HX_("update",09,86,05,87)));
HXLINE( 129)					this->selected = (int)2;
            				}
            				else {
HXLINE( 131)					Bool _hx_tmp26;
HXDLIN( 131)					Bool _hx_tmp27;
HXDLIN( 131)					Bool _hx_tmp28;
HXDLIN( 131)					Bool _hx_tmp29 = (::flixel::FlxG_obj::mouse->getPosition(null())->x > (int)970);
HXDLIN( 131)					if (_hx_tmp29) {
HXLINE( 131)						_hx_tmp28 = (::flixel::FlxG_obj::mouse->getPosition(null())->x < (int)1050);
            					}
            					else {
HXLINE( 131)						_hx_tmp28 = false;
            					}
HXDLIN( 131)					if (_hx_tmp28) {
HXLINE( 131)						_hx_tmp27 = (::flixel::FlxG_obj::mouse->getPosition(null())->y > (int)370);
            					}
            					else {
HXLINE( 131)						_hx_tmp27 = false;
            					}
HXDLIN( 131)					if (_hx_tmp27) {
HXLINE( 131)						_hx_tmp26 = (::flixel::FlxG_obj::mouse->getPosition(null())->y < (int)720);
            					}
            					else {
HXLINE( 131)						_hx_tmp26 = false;
            					}
HXDLIN( 131)					if (_hx_tmp26) {
HXLINE( 134)						::haxe::Log_obj::trace(HX_("plug 3",e1,4a,e3,44),hx::SourceInfo(HX_("FuelCellGet.hx",60,ea,6a,7b),134,HX_("FuelCellGet",1e,1f,6a,34),HX_("update",09,86,05,87)));
HXLINE( 135)						this->selected = (int)3;
            					}
            					else {
HXLINE( 139)						this->selected = (int)0;
            					}
            				}
            			}
            		}
HXLINE( 144)		this->super::update(elapsed);
            	}



FuelCellGet_obj::FuelCellGet_obj()
{
}

void FuelCellGet_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(FuelCellGet);
	HX_MARK_MEMBER_NAME(Parent,"Parent");
	HX_MARK_MEMBER_NAME(yep1,"yep1");
	HX_MARK_MEMBER_NAME(yep2,"yep2");
	HX_MARK_MEMBER_NAME(yep3,"yep3");
	HX_MARK_MEMBER_NAME(nop1,"nop1");
	HX_MARK_MEMBER_NAME(nop2,"nop2");
	HX_MARK_MEMBER_NAME(nop3,"nop3");
	HX_MARK_MEMBER_NAME(selected,"selected");
	 ::flixel::FlxSubState_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void FuelCellGet_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(Parent,"Parent");
	HX_VISIT_MEMBER_NAME(yep1,"yep1");
	HX_VISIT_MEMBER_NAME(yep2,"yep2");
	HX_VISIT_MEMBER_NAME(yep3,"yep3");
	HX_VISIT_MEMBER_NAME(nop1,"nop1");
	HX_VISIT_MEMBER_NAME(nop2,"nop2");
	HX_VISIT_MEMBER_NAME(nop3,"nop3");
	HX_VISIT_MEMBER_NAME(selected,"selected");
	 ::flixel::FlxSubState_obj::__Visit(HX_VISIT_ARG);
}

hx::Val FuelCellGet_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"yep1") ) { return hx::Val( yep1); }
		if (HX_FIELD_EQ(inName,"yep2") ) { return hx::Val( yep2); }
		if (HX_FIELD_EQ(inName,"yep3") ) { return hx::Val( yep3); }
		if (HX_FIELD_EQ(inName,"nop1") ) { return hx::Val( nop1); }
		if (HX_FIELD_EQ(inName,"nop2") ) { return hx::Val( nop2); }
		if (HX_FIELD_EQ(inName,"nop3") ) { return hx::Val( nop3); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"Parent") ) { return hx::Val( Parent); }
		if (HX_FIELD_EQ(inName,"update") ) { return hx::Val( update_dyn()); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"selected") ) { return hx::Val( selected); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val FuelCellGet_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"yep1") ) { yep1=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"yep2") ) { yep2=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"yep3") ) { yep3=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"nop1") ) { nop1=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"nop2") ) { nop2=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"nop3") ) { nop3=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"Parent") ) { Parent=inValue.Cast<  ::flixel::FlxState >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"selected") ) { selected=inValue.Cast< Int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void FuelCellGet_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("Parent","\x4a","\x79","\x12","\x22"));
	outFields->push(HX_HCSTRING("yep1","\x8d","\xd6","\x47","\x50"));
	outFields->push(HX_HCSTRING("yep2","\x8e","\xd6","\x47","\x50"));
	outFields->push(HX_HCSTRING("yep3","\x8f","\xd6","\x47","\x50"));
	outFields->push(HX_HCSTRING("nop1","\x42","\x14","\x0a","\x49"));
	outFields->push(HX_HCSTRING("nop2","\x43","\x14","\x0a","\x49"));
	outFields->push(HX_HCSTRING("nop3","\x44","\x14","\x0a","\x49"));
	outFields->push(HX_HCSTRING("selected","\x5b","\x2a","\x6d","\xb1"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo FuelCellGet_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::flixel::FlxState*/ ,(int)offsetof(FuelCellGet_obj,Parent),HX_HCSTRING("Parent","\x4a","\x79","\x12","\x22")},
	{hx::fsObject /*::flixel::FlxSprite*/ ,(int)offsetof(FuelCellGet_obj,yep1),HX_HCSTRING("yep1","\x8d","\xd6","\x47","\x50")},
	{hx::fsObject /*::flixel::FlxSprite*/ ,(int)offsetof(FuelCellGet_obj,yep2),HX_HCSTRING("yep2","\x8e","\xd6","\x47","\x50")},
	{hx::fsObject /*::flixel::FlxSprite*/ ,(int)offsetof(FuelCellGet_obj,yep3),HX_HCSTRING("yep3","\x8f","\xd6","\x47","\x50")},
	{hx::fsObject /*::flixel::FlxSprite*/ ,(int)offsetof(FuelCellGet_obj,nop1),HX_HCSTRING("nop1","\x42","\x14","\x0a","\x49")},
	{hx::fsObject /*::flixel::FlxSprite*/ ,(int)offsetof(FuelCellGet_obj,nop2),HX_HCSTRING("nop2","\x43","\x14","\x0a","\x49")},
	{hx::fsObject /*::flixel::FlxSprite*/ ,(int)offsetof(FuelCellGet_obj,nop3),HX_HCSTRING("nop3","\x44","\x14","\x0a","\x49")},
	{hx::fsInt,(int)offsetof(FuelCellGet_obj,selected),HX_HCSTRING("selected","\x5b","\x2a","\x6d","\xb1")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *FuelCellGet_obj_sStaticStorageInfo = 0;
#endif

static ::String FuelCellGet_obj_sMemberFields[] = {
	HX_HCSTRING("Parent","\x4a","\x79","\x12","\x22"),
	HX_HCSTRING("yep1","\x8d","\xd6","\x47","\x50"),
	HX_HCSTRING("yep2","\x8e","\xd6","\x47","\x50"),
	HX_HCSTRING("yep3","\x8f","\xd6","\x47","\x50"),
	HX_HCSTRING("nop1","\x42","\x14","\x0a","\x49"),
	HX_HCSTRING("nop2","\x43","\x14","\x0a","\x49"),
	HX_HCSTRING("nop3","\x44","\x14","\x0a","\x49"),
	HX_HCSTRING("selected","\x5b","\x2a","\x6d","\xb1"),
	HX_HCSTRING("update","\x09","\x86","\x05","\x87"),
	::String(null()) };

static void FuelCellGet_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(FuelCellGet_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void FuelCellGet_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(FuelCellGet_obj::__mClass,"__mClass");
};

#endif

hx::Class FuelCellGet_obj::__mClass;

void FuelCellGet_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("FuelCellGet","\x1e","\x1f","\x6a","\x34");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = FuelCellGet_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(FuelCellGet_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< FuelCellGet_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = FuelCellGet_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FuelCellGet_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FuelCellGet_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

