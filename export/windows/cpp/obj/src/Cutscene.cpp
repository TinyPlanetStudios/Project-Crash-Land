// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_Cutscene
#include <Cutscene.h>
#endif
#ifndef INCLUDED_PlayState
#include <PlayState.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxGame
#include <flixel/FlxGame.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_math_FlxPoint
#include <flixel/math/FlxPoint.h>
#endif
#ifndef INCLUDED_flixel_system_FlxSoundGroup
#include <flixel/system/FlxSoundGroup.h>
#endif
#ifndef INCLUDED_flixel_system_frontEnds_SoundFrontEnd
#include <flixel/system/frontEnds/SoundFrontEnd.h>
#endif
#ifndef INCLUDED_flixel_text_FlxText
#include <flixel/text/FlxText.h>
#endif
#ifndef INCLUDED_flixel_tweens_FlxTween
#include <flixel/tweens/FlxTween.h>
#endif
#ifndef INCLUDED_flixel_tweens_misc_VarTween
#include <flixel/tweens/misc/VarTween.h>
#endif
#ifndef INCLUDED_flixel_tweens_motion_Motion
#include <flixel/tweens/motion/Motion.h>
#endif
#ifndef INCLUDED_flixel_tweens_motion_QuadPath
#include <flixel/tweens/motion/QuadPath.h>
#endif
#ifndef INCLUDED_flixel_util_FlxAxes
#include <flixel/util/FlxAxes.h>
#endif
#ifndef INCLUDED_flixel_util_FlxPool_flixel_math_FlxPoint
#include <flixel/util/FlxPool_flixel_math_FlxPoint.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxPool
#include <flixel/util/IFlxPool.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxPooled
#include <flixel/util/IFlxPooled.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_DisplayObject
#include <openfl/_legacy/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_DisplayObjectContainer
#include <openfl/_legacy/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_IBitmapDrawable
#include <openfl/_legacy/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_InteractiveObject
#include <openfl/_legacy/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_Sprite
#include <openfl/_legacy/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl__legacy_events_EventDispatcher
#include <openfl/_legacy/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl__legacy_events_IEventDispatcher
#include <openfl/_legacy/events/IEventDispatcher.h>
#endif


void Cutscene_obj::__construct( ::Dynamic __o_code){
 ::Dynamic code = __o_code.Default(0);
            	HX_STACK_FRAME("Cutscene","new",0xc6e1169c,"Cutscene.new","Cutscene.hx",27,0xf31db054)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(code,"code")
HXLINE(  28)		super::__construct(null());
HXLINE(  29)		this->Code = code;
            	}

Dynamic Cutscene_obj::__CreateEmpty() { return new Cutscene_obj; }

hx::ObjectPtr< Cutscene_obj > Cutscene_obj::__new( ::Dynamic __o_code)
{
	hx::ObjectPtr< Cutscene_obj > _hx_result = new Cutscene_obj();
	_hx_result->__construct(__o_code);
	return _hx_result;
}

Dynamic Cutscene_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Cutscene_obj > _hx_result = new Cutscene_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

void Cutscene_obj::create(){
            	HX_STACK_FRAME("Cutscene","create",0xf83aae40,"Cutscene.create","Cutscene.hx",33,0xf31db054)
            	HX_STACK_THIS(this)
HXLINE(  34)		this->super::create();
HXLINE(  35)		Bool _hx_tmp = (this->Code == (int)1);
HXDLIN(  35)		if (_hx_tmp) {
HXLINE(  37)			::flixel::FlxG_obj::sound->playMusic(HX_("assets/sounds/takeoff.ogg",aa,56,bf,f4),((Float).5),false,null());
HXLINE(  39)			this->Fin =  ::flixel::text::FlxText_obj::__new((int)0,(int)0,(int)0,HX_("FIN",ab,5d,35,00),(int)64,null());
HXLINE(  40)			Float _hx_tmp1 = this->Fin->get_height();
HXDLIN(  40)			this->Fin->setPosition((int)0,((int)340 - ((Float)_hx_tmp1 / (Float)(int)2)));
HXLINE(  41)			this->add(this->Fin);
HXLINE(  42)			this->Fin->screenCenter(::flixel::util::FlxAxes_obj::X_dyn());
HXLINE(  44)			this->ShamelessPlug =  ::flixel::text::FlxText_obj::__new((int)0,(int)0,(int)0,HX_("MADE IN 48 HOURS BY: GRIMMR (1/2 OF TINY PLANET STUDIOS)",bb,94,75,43),(int)8,null());
HXLINE(  45)			this->add(this->ShamelessPlug);
HXLINE(  46)			Float _hx_tmp2 = this->ShamelessPlug->getPosition(null())->x;
HXDLIN(  46)			Float _hx_tmp3 = this->Fin->y;
HXDLIN(  46)			Float _hx_tmp4 = this->Fin->get_height();
HXDLIN(  46)			this->ShamelessPlug->setPosition(_hx_tmp2,(_hx_tmp3 + _hx_tmp4));
HXLINE(  48)			this->rocket =  ::flixel::FlxSprite_obj::__new((int)0,(int)250,HX_("assets/images/rocketPuppet.png",4e,ec,91,52));
HXLINE(  49)			this->rocket->setPosition(-(this->rocket->get_width()),(int)250);
HXLINE(  50)			this->add(this->rocket);
HXLINE(  51)			this->Ephase2(null());
            		}
            		else {
HXLINE(  55)			this->rocket =  ::flixel::FlxSprite_obj::__new((int)0,(int)0,HX_("assets/images/rocketPuppet.png",4e,ec,91,52));
HXLINE(  56)			Float _hx_tmp5 = this->rocket->get_width();
HXDLIN(  56)			this->rocket->setPosition((int)0,((Float)_hx_tmp5 / (Float)(int)2));
HXLINE(  57)			this->add(this->rocket);
HXLINE(  58)			this->rocket->set_angle((int)-90);
HXLINE(  60)			Float _hx_tmp6 = (this->rocket->y - (int)37);
HXDLIN(  60)			this->planet =  ::flixel::FlxSprite_obj::__new((int)1280,_hx_tmp6,HX_("assets/images/planetpuppet.png",72,88,74,5a));
HXLINE(  61)			this->add(this->planet);
HXLINE(  63)			::flixel::tweens::FlxTween_obj::tween(this->rocket, ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("x",78,00,00,00),(int)120)
            				->setFixed(1,HX_("angle",d3,43,e2,22),(int)0)),((Float)2.5), ::Dynamic(hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("onComplete",f8,d4,7e,5d),this->Ophase2_dyn())));
            		}
            	}


void Cutscene_obj::update(Float elapsed){
            	HX_STACK_FRAME("Cutscene","update",0x0330cd4d,"Cutscene.update","Cutscene.hx",70,0xf31db054)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(elapsed,"elapsed")
HXLINE(  70)		Bool _hx_tmp = (this->Code == (int)1);
HXDLIN(  70)		if (_hx_tmp) {
HXLINE(  72)			Float _hx_tmp1 = this->rocket->getPosition(null())->x;
HXDLIN(  72)			Float _hx_tmp2 = this->ShamelessPlug->get_width();
HXDLIN(  72)			if ((_hx_tmp1 <= (((Float)640.) + ((Float)_hx_tmp2 / (Float)(int)2)))) {
HXLINE(  74)				Float _hx_tmp3 = this->rocket->getPosition(null())->x;
HXDLIN(  74)				Float _hx_tmp4 = this->ShamelessPlug->get_width();
HXDLIN(  74)				this->ShamelessPlug->setPosition((_hx_tmp3 - _hx_tmp4),this->ShamelessPlug->getPosition(null())->y);
HXLINE(  75)				Float _hx_tmp5 = this->ShamelessPlug->getPosition(null())->x;
HXDLIN(  75)				Float _hx_tmp6 = this->ShamelessPlug->get_width();
HXDLIN(  75)				Float _hx_tmp7 = this->Fin->get_width();
HXDLIN(  75)				this->Fin->setPosition((_hx_tmp5 + ((Float)(_hx_tmp6 - _hx_tmp7) / (Float)(int)2)),this->Fin->getPosition(null())->y);
            			}
            		}
            	}


void Cutscene_obj::Ephase2( ::flixel::tweens::FlxTween junk){
            	HX_STACK_FRAME("Cutscene","Ephase2",0x491621d8,"Cutscene.Ephase2","Cutscene.hx",82,0xf31db054)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(junk,"junk")
HXLINE(  82)		Float X = this->rocket->getPosition(null())->x;
HXDLIN(  82)		Float Y = this->rocket->getPosition(null())->y;
HXDLIN(  82)		HX_VARI(  ::flixel::math::FlxPoint,point) = ::flixel::math::FlxPoint_obj::_pool->get()->set(X,Y);
HXDLIN(  82)		point->_inPool = false;
HXLINE(  83)		Float X1 = (this->rocket->getPosition(null())->x + (int)50);
HXDLIN(  83)		Float Y1 = (this->rocket->getPosition(null())->y - (int)75);
HXDLIN(  83)		HX_VARI_NAME(  ::flixel::math::FlxPoint,point1,"point") = ::flixel::math::FlxPoint_obj::_pool->get()->set(X1,Y1);
HXDLIN(  83)		point1->_inPool = false;
HXLINE(  84)		Float X2 = (this->rocket->getPosition(null())->x + (int)100);
HXDLIN(  84)		Float Y2 = this->rocket->getPosition(null())->y;
HXDLIN(  84)		HX_VARI_NAME(  ::flixel::math::FlxPoint,point2,"point") = ::flixel::math::FlxPoint_obj::_pool->get()->set(X2,Y2);
HXDLIN(  84)		point2->_inPool = false;
HXLINE(  82)		::flixel::tweens::FlxTween_obj::quadPath(this->rocket,::Array_obj< ::Dynamic>::__new(3)->init(0,point)->init(1,point1)->init(2,point2),(int)1,true, ::Dynamic(hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("onComplete",f8,d4,7e,5d),this->Ephase3_dyn())));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Cutscene_obj,Ephase2,(void))

void Cutscene_obj::Ephase3( ::flixel::tweens::FlxTween junk){
            	HX_STACK_FRAME("Cutscene","Ephase3",0x491621d9,"Cutscene.Ephase3","Cutscene.hx",90,0xf31db054)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(junk,"junk")
HXLINE(  90)		Float X = this->rocket->getPosition(null())->x;
HXDLIN(  90)		Float Y = this->rocket->getPosition(null())->y;
HXDLIN(  90)		HX_VARI(  ::flixel::math::FlxPoint,point) = ::flixel::math::FlxPoint_obj::_pool->get()->set(X,Y);
HXDLIN(  90)		point->_inPool = false;
HXLINE(  91)		Float X1 = (this->rocket->getPosition(null())->x + (int)50);
HXDLIN(  91)		Float Y1 = (this->rocket->getPosition(null())->y + (int)75);
HXDLIN(  91)		HX_VARI_NAME(  ::flixel::math::FlxPoint,point1,"point") = ::flixel::math::FlxPoint_obj::_pool->get()->set(X1,Y1);
HXDLIN(  91)		point1->_inPool = false;
HXLINE(  92)		Float X2 = (this->rocket->getPosition(null())->x + (int)100);
HXDLIN(  92)		Float Y2 = this->rocket->getPosition(null())->y;
HXDLIN(  92)		HX_VARI_NAME(  ::flixel::math::FlxPoint,point2,"point") = ::flixel::math::FlxPoint_obj::_pool->get()->set(X2,Y2);
HXDLIN(  92)		point2->_inPool = false;
HXLINE(  90)		::flixel::tweens::FlxTween_obj::quadPath(this->rocket,::Array_obj< ::Dynamic>::__new(3)->init(0,point)->init(1,point1)->init(2,point2),(int)1,true, ::Dynamic(hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("onComplete",f8,d4,7e,5d),this->Ephase4_dyn())));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Cutscene_obj,Ephase3,(void))

void Cutscene_obj::Ephase4( ::flixel::tweens::FlxTween junk){
            	HX_STACK_FRAME("Cutscene","Ephase4",0x491621da,"Cutscene.Ephase4","Cutscene.hx",98,0xf31db054)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(junk,"junk")
HXLINE(  98)		Bool _hx_tmp = (this->rocket->getPosition(null())->x < (int)1280);
HXDLIN(  98)		if (_hx_tmp) {
HXLINE( 100)			this->Ephase2(null());
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Cutscene_obj,Ephase4,(void))

void Cutscene_obj::Ophase2( ::flixel::tweens::FlxTween junk){
            	HX_STACK_FRAME("Cutscene","Ophase2",0xe8ecc562,"Cutscene.Ophase2","Cutscene.hx",109,0xf31db054)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(junk,"junk")
HXLINE( 110)		::haxe::Log_obj::trace(this->rocket->getPosition(null())->y,hx::SourceInfo(HX_("Cutscene.hx",54,b0,1d,f3),110,HX_("Cutscene",aa,d8,ba,d3),HX_("Ophase2",26,b1,39,bf)));
HXLINE( 111)		Float _hx_tmp = (this->rocket->getPosition(null())->y - (int)100);
HXDLIN( 111)		::flixel::tweens::FlxTween_obj::tween(this->rocket, ::Dynamic(hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("x",78,00,00,00),(int)170)
            			->setFixed(1,HX_("y",79,00,00,00),_hx_tmp)
            			->setFixed(2,HX_("angle",d3,43,e2,22),(int)0)),((Float).5), ::Dynamic(hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("onComplete",f8,d4,7e,5d),this->Ophase3_dyn())));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Cutscene_obj,Ophase2,(void))

void Cutscene_obj::Ophase3( ::flixel::tweens::FlxTween junk){
            	HX_STACK_FRAME("Cutscene","Ophase3",0xe8ecc563,"Cutscene.Ophase3","Cutscene.hx",116,0xf31db054)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(junk,"junk")
HXLINE( 116)		Float _hx_tmp = (this->rocket->getPosition(null())->y + (int)200);
HXDLIN( 116)		::flixel::tweens::FlxTween_obj::tween(this->rocket, ::Dynamic(hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("x",78,00,00,00),(int)270)
            			->setFixed(1,HX_("y",79,00,00,00),_hx_tmp)
            			->setFixed(2,HX_("angle",d3,43,e2,22),(int)0)),(int)1, ::Dynamic(hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("onComplete",f8,d4,7e,5d),this->Ophase4_dyn())));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Cutscene_obj,Ophase3,(void))

void Cutscene_obj::Ophase4( ::flixel::tweens::FlxTween junk){
            	HX_STACK_FRAME("Cutscene","Ophase4",0xe8ecc564,"Cutscene.Ophase4","Cutscene.hx",121,0xf31db054)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(junk,"junk")
HXLINE( 121)		Float _hx_tmp = (this->rocket->getPosition(null())->y - (int)200);
HXDLIN( 121)		::flixel::tweens::FlxTween_obj::tween(this->rocket, ::Dynamic(hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("x",78,00,00,00),(int)270)
            			->setFixed(1,HX_("y",79,00,00,00),_hx_tmp)
            			->setFixed(2,HX_("angle",d3,43,e2,22),(int)0)),(int)1, ::Dynamic(hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("onComplete",f8,d4,7e,5d),this->Ophase5_dyn())));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Cutscene_obj,Ophase4,(void))

void Cutscene_obj::Ophase5( ::flixel::tweens::FlxTween junk){
            	HX_STACK_FRAME("Cutscene","Ophase5",0xe8ecc565,"Cutscene.Ophase5","Cutscene.hx",126,0xf31db054)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(junk,"junk")
HXLINE( 126)		Float _hx_tmp = (this->rocket->getPosition(null())->y + (int)200);
HXDLIN( 126)		::flixel::tweens::FlxTween_obj::tween(this->rocket, ::Dynamic(hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("x",78,00,00,00),(int)270)
            			->setFixed(1,HX_("y",79,00,00,00),_hx_tmp)
            			->setFixed(2,HX_("angle",d3,43,e2,22),(int)0)),(int)1, ::Dynamic(hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("onComplete",f8,d4,7e,5d),this->Ophase6_dyn())));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Cutscene_obj,Ophase5,(void))

void Cutscene_obj::Ophase6( ::flixel::tweens::FlxTween junk){
            	HX_STACK_FRAME("Cutscene","Ophase6",0xe8ecc566,"Cutscene.Ophase6","Cutscene.hx",131,0xf31db054)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(junk,"junk")
HXLINE( 131)		Float _hx_tmp = (this->rocket->getPosition(null())->y - (int)100);
HXDLIN( 131)		::flixel::tweens::FlxTween_obj::tween(this->rocket, ::Dynamic(hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("x",78,00,00,00),(int)270)
            			->setFixed(1,HX_("y",79,00,00,00),_hx_tmp)
            			->setFixed(2,HX_("angle",d3,43,e2,22),(int)0)),(int)1, ::Dynamic(hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("onComplete",f8,d4,7e,5d),this->Ophase7_dyn())));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Cutscene_obj,Ophase6,(void))

void Cutscene_obj::Ophase7( ::flixel::tweens::FlxTween junk){
            	HX_STACK_FRAME("Cutscene","Ophase7",0xe8ecc567,"Cutscene.Ophase7","Cutscene.hx",135,0xf31db054)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(junk,"junk")
HXLINE( 136)		::flixel::tweens::FlxTween_obj::tween(this->rocket, ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("x",78,00,00,00),(int)645)
            			->setFixed(1,HX_("angle",d3,43,e2,22),(int)0)),(int)2, ::Dynamic(hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("onComplete",f8,d4,7e,5d),this->Ophase8_dyn())));
HXLINE( 137)		Float _hx_tmp = this->rocket->get_width();
HXDLIN( 137)		::flixel::tweens::FlxTween_obj::tween(this->planet, ::Dynamic(hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("x",78,00,00,00),((int)645 + ((Float)_hx_tmp / (Float)(int)2)))),(int)2,null());
            	}


HX_DEFINE_DYNAMIC_FUNC1(Cutscene_obj,Ophase7,(void))

void Cutscene_obj::Ophase8( ::flixel::tweens::FlxTween junk){
            	HX_STACK_FRAME("Cutscene","Ophase8",0xe8ecc568,"Cutscene.Ophase8","Cutscene.hx",142,0xf31db054)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(junk,"junk")
HXLINE( 142)		Float _hx_tmp = (this->rocket->angle + (int)1);
HXDLIN( 142)		::flixel::tweens::FlxTween_obj::tween(this->rocket, ::Dynamic(hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("angle",d3,43,e2,22),_hx_tmp)),(int)5, ::Dynamic(hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("onComplete",f8,d4,7e,5d),this->Ophase9_dyn())));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Cutscene_obj,Ophase8,(void))

void Cutscene_obj::Ophase9( ::flixel::tweens::FlxTween junk){
            	HX_STACK_FRAME("Cutscene","Ophase9",0xe8ecc569,"Cutscene.Ophase9","Cutscene.hx",147,0xf31db054)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(junk,"junk")
HXLINE( 147)		HX_VARI(  ::flixel::FlxState,nextState) =  ::PlayState_obj::__new(null());
HXDLIN( 147)		Bool _hx_tmp = ::flixel::FlxG_obj::game->_state->switchTo(nextState);
HXDLIN( 147)		if (_hx_tmp) {
HXLINE( 147)			::flixel::FlxG_obj::game->_requestedState = nextState;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Cutscene_obj,Ophase9,(void))


Cutscene_obj::Cutscene_obj()
{
}

void Cutscene_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Cutscene);
	HX_MARK_MEMBER_NAME(rocket,"rocket");
	HX_MARK_MEMBER_NAME(planet,"planet");
	HX_MARK_MEMBER_NAME(Code,"Code");
	HX_MARK_MEMBER_NAME(Fin,"Fin");
	HX_MARK_MEMBER_NAME(ShamelessPlug,"ShamelessPlug");
	 ::flixel::FlxState_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void Cutscene_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(rocket,"rocket");
	HX_VISIT_MEMBER_NAME(planet,"planet");
	HX_VISIT_MEMBER_NAME(Code,"Code");
	HX_VISIT_MEMBER_NAME(Fin,"Fin");
	HX_VISIT_MEMBER_NAME(ShamelessPlug,"ShamelessPlug");
	 ::flixel::FlxState_obj::__Visit(HX_VISIT_ARG);
}

hx::Val Cutscene_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"Fin") ) { return hx::Val( Fin); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"Code") ) { return hx::Val( Code); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"rocket") ) { return hx::Val( rocket); }
		if (HX_FIELD_EQ(inName,"planet") ) { return hx::Val( planet); }
		if (HX_FIELD_EQ(inName,"create") ) { return hx::Val( create_dyn()); }
		if (HX_FIELD_EQ(inName,"update") ) { return hx::Val( update_dyn()); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"Ephase2") ) { return hx::Val( Ephase2_dyn()); }
		if (HX_FIELD_EQ(inName,"Ephase3") ) { return hx::Val( Ephase3_dyn()); }
		if (HX_FIELD_EQ(inName,"Ephase4") ) { return hx::Val( Ephase4_dyn()); }
		if (HX_FIELD_EQ(inName,"Ophase2") ) { return hx::Val( Ophase2_dyn()); }
		if (HX_FIELD_EQ(inName,"Ophase3") ) { return hx::Val( Ophase3_dyn()); }
		if (HX_FIELD_EQ(inName,"Ophase4") ) { return hx::Val( Ophase4_dyn()); }
		if (HX_FIELD_EQ(inName,"Ophase5") ) { return hx::Val( Ophase5_dyn()); }
		if (HX_FIELD_EQ(inName,"Ophase6") ) { return hx::Val( Ophase6_dyn()); }
		if (HX_FIELD_EQ(inName,"Ophase7") ) { return hx::Val( Ophase7_dyn()); }
		if (HX_FIELD_EQ(inName,"Ophase8") ) { return hx::Val( Ophase8_dyn()); }
		if (HX_FIELD_EQ(inName,"Ophase9") ) { return hx::Val( Ophase9_dyn()); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"ShamelessPlug") ) { return hx::Val( ShamelessPlug); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val Cutscene_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"Fin") ) { Fin=inValue.Cast<  ::flixel::text::FlxText >(); return inValue; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"Code") ) { Code=inValue.Cast< Int >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"rocket") ) { rocket=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"planet") ) { planet=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"ShamelessPlug") ) { ShamelessPlug=inValue.Cast<  ::flixel::text::FlxText >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Cutscene_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("rocket","\x54","\x2f","\xeb","\xbf"));
	outFields->push(HX_HCSTRING("planet","\x98","\x92","\xb0","\x37"));
	outFields->push(HX_HCSTRING("Code","\x4d","\xdd","\x9d","\x2c"));
	outFields->push(HX_HCSTRING("Fin","\xab","\x79","\x35","\x00"));
	outFields->push(HX_HCSTRING("ShamelessPlug","\xab","\xf3","\xf9","\x30"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Cutscene_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::flixel::FlxSprite*/ ,(int)offsetof(Cutscene_obj,rocket),HX_HCSTRING("rocket","\x54","\x2f","\xeb","\xbf")},
	{hx::fsObject /*::flixel::FlxSprite*/ ,(int)offsetof(Cutscene_obj,planet),HX_HCSTRING("planet","\x98","\x92","\xb0","\x37")},
	{hx::fsInt,(int)offsetof(Cutscene_obj,Code),HX_HCSTRING("Code","\x4d","\xdd","\x9d","\x2c")},
	{hx::fsObject /*::flixel::text::FlxText*/ ,(int)offsetof(Cutscene_obj,Fin),HX_HCSTRING("Fin","\xab","\x79","\x35","\x00")},
	{hx::fsObject /*::flixel::text::FlxText*/ ,(int)offsetof(Cutscene_obj,ShamelessPlug),HX_HCSTRING("ShamelessPlug","\xab","\xf3","\xf9","\x30")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Cutscene_obj_sStaticStorageInfo = 0;
#endif

static ::String Cutscene_obj_sMemberFields[] = {
	HX_HCSTRING("rocket","\x54","\x2f","\xeb","\xbf"),
	HX_HCSTRING("planet","\x98","\x92","\xb0","\x37"),
	HX_HCSTRING("Code","\x4d","\xdd","\x9d","\x2c"),
	HX_HCSTRING("Fin","\xab","\x79","\x35","\x00"),
	HX_HCSTRING("ShamelessPlug","\xab","\xf3","\xf9","\x30"),
	HX_HCSTRING("create","\xfc","\x66","\x0f","\x7c"),
	HX_HCSTRING("update","\x09","\x86","\x05","\x87"),
	HX_HCSTRING("Ephase2","\x9c","\x0d","\x63","\x1f"),
	HX_HCSTRING("Ephase3","\x9d","\x0d","\x63","\x1f"),
	HX_HCSTRING("Ephase4","\x9e","\x0d","\x63","\x1f"),
	HX_HCSTRING("Ophase2","\x26","\xb1","\x39","\xbf"),
	HX_HCSTRING("Ophase3","\x27","\xb1","\x39","\xbf"),
	HX_HCSTRING("Ophase4","\x28","\xb1","\x39","\xbf"),
	HX_HCSTRING("Ophase5","\x29","\xb1","\x39","\xbf"),
	HX_HCSTRING("Ophase6","\x2a","\xb1","\x39","\xbf"),
	HX_HCSTRING("Ophase7","\x2b","\xb1","\x39","\xbf"),
	HX_HCSTRING("Ophase8","\x2c","\xb1","\x39","\xbf"),
	HX_HCSTRING("Ophase9","\x2d","\xb1","\x39","\xbf"),
	::String(null()) };

static void Cutscene_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Cutscene_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Cutscene_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Cutscene_obj::__mClass,"__mClass");
};

#endif

hx::Class Cutscene_obj::__mClass;

void Cutscene_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("Cutscene","\xaa","\xd8","\xba","\xd3");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Cutscene_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Cutscene_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Cutscene_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Cutscene_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Cutscene_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Cutscene_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

