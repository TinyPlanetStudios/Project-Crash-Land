// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_Global
#include <Global.h>
#endif
#ifndef INCLUDED_TrapDoorCode
#include <TrapDoorCode.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
#ifndef INCLUDED_flixel_FlxSubState
#include <flixel/FlxSubState.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_input_IFlxInput
#include <flixel/input/IFlxInput.h>
#endif
#ifndef INCLUDED_flixel_math_FlxPoint
#include <flixel/math/FlxPoint.h>
#endif
#ifndef INCLUDED_flixel_text_FlxText
#include <flixel/text/FlxText.h>
#endif
#ifndef INCLUDED_flixel_text_FlxTextBorderStyle
#include <flixel/text/FlxTextBorderStyle.h>
#endif
#ifndef INCLUDED_flixel_ui_FlxButton
#include <flixel/ui/FlxButton.h>
#endif
#ifndef INCLUDED_flixel_ui_FlxTypedButton_flixel_text_FlxText
#include <flixel/ui/FlxTypedButton_flixel_text_FlxText.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxPooled
#include <flixel/util/IFlxPooled.h>
#endif


void TrapDoorCode_obj::__construct( ::flixel::FlxState parent){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::TrapDoorCode,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_STACK_FRAME("TrapDoorCode","new",0xe4b925da,"TrapDoorCode.new","TrapDoorCode.hx",38,0x6aa3d2d6)
HXLINE(  38)			_gthis->buttonCycle(_gthis->button1);
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_1, ::TrapDoorCode,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_STACK_FRAME("TrapDoorCode","new",0xe4b925da,"TrapDoorCode.new","TrapDoorCode.hx",46,0x6aa3d2d6)
HXLINE(  46)			_gthis->buttonCycle(_gthis->button2);
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_2, ::TrapDoorCode,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_STACK_FRAME("TrapDoorCode","new",0xe4b925da,"TrapDoorCode.new","TrapDoorCode.hx",54,0x6aa3d2d6)
HXLINE(  54)			_gthis->buttonCycle(_gthis->button3);
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_3, ::TrapDoorCode,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_STACK_FRAME("TrapDoorCode","new",0xe4b925da,"TrapDoorCode.new","TrapDoorCode.hx",62,0x6aa3d2d6)
HXLINE(  62)			_gthis->buttonCycle(_gthis->button4);
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_4, ::TrapDoorCode,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_STACK_FRAME("TrapDoorCode","new",0xe4b925da,"TrapDoorCode.new","TrapDoorCode.hx",70,0x6aa3d2d6)
HXLINE(  70)			_gthis->buttonCycle(_gthis->button5);
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_5, ::TrapDoorCode,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_STACK_FRAME("TrapDoorCode","new",0xe4b925da,"TrapDoorCode.new","TrapDoorCode.hx",79,0x6aa3d2d6)
HXLINE(  79)			Bool _hx_tmp1;
HXDLIN(  79)			Bool _hx_tmp2;
HXDLIN(  79)			Bool _hx_tmp3;
HXDLIN(  79)			Bool _hx_tmp4;
HXDLIN(  79)			HX_VARI(  ::flixel::ui::FlxButton,_this) = _gthis->button1;
HXDLIN(  79)			::String _hx_tmp5;
HXDLIN(  79)			Bool _hx_tmp6 = hx::IsNotNull( _this->label );
HXDLIN(  79)			if (_hx_tmp6) {
HXLINE(  79)				_hx_tmp5 = _this->label->text;
            			}
            			else {
HXLINE(  79)				_hx_tmp5 = null();
            			}
HXDLIN(  79)			if ((_hx_tmp5 == HX_("2",32,00,00,00))) {
HXLINE(  79)				HX_VARI_NAME(  ::flixel::ui::FlxButton,_this1,"_this") = _gthis->button2;
HXDLIN(  79)				::String _hx_tmp7;
HXDLIN(  79)				Bool _hx_tmp8 = hx::IsNotNull( _this1->label );
HXDLIN(  79)				if (_hx_tmp8) {
HXLINE(  79)					_hx_tmp7 = _this1->label->text;
            				}
            				else {
HXLINE(  79)					_hx_tmp7 = null();
            				}
HXDLIN(  79)				_hx_tmp4 = (_hx_tmp7 == HX_("5",35,00,00,00));
            			}
            			else {
HXLINE(  79)				_hx_tmp4 = false;
            			}
HXDLIN(  79)			if (_hx_tmp4) {
HXLINE(  79)				HX_VARI_NAME(  ::flixel::ui::FlxButton,_this2,"_this") = _gthis->button3;
HXDLIN(  79)				::String _hx_tmp9;
HXDLIN(  79)				Bool _hx_tmp10 = hx::IsNotNull( _this2->label );
HXDLIN(  79)				if (_hx_tmp10) {
HXLINE(  79)					_hx_tmp9 = _this2->label->text;
            				}
            				else {
HXLINE(  79)					_hx_tmp9 = null();
            				}
HXDLIN(  79)				_hx_tmp3 = (_hx_tmp9 == HX_("9",39,00,00,00));
            			}
            			else {
HXLINE(  79)				_hx_tmp3 = false;
            			}
HXDLIN(  79)			if (_hx_tmp3) {
HXLINE(  79)				HX_VARI_NAME(  ::flixel::ui::FlxButton,_this3,"_this") = _gthis->button4;
HXDLIN(  79)				::String _hx_tmp11;
HXDLIN(  79)				Bool _hx_tmp12 = hx::IsNotNull( _this3->label );
HXDLIN(  79)				if (_hx_tmp12) {
HXLINE(  79)					_hx_tmp11 = _this3->label->text;
            				}
            				else {
HXLINE(  79)					_hx_tmp11 = null();
            				}
HXDLIN(  79)				_hx_tmp2 = (_hx_tmp11 == HX_("7",37,00,00,00));
            			}
            			else {
HXLINE(  79)				_hx_tmp2 = false;
            			}
HXDLIN(  79)			if (_hx_tmp2) {
HXLINE(  79)				HX_VARI_NAME(  ::flixel::ui::FlxButton,_this4,"_this") = _gthis->button5;
HXDLIN(  79)				::String _hx_tmp13;
HXDLIN(  79)				Bool _hx_tmp14 = hx::IsNotNull( _this4->label );
HXDLIN(  79)				if (_hx_tmp14) {
HXLINE(  79)					_hx_tmp13 = _this4->label->text;
            				}
            				else {
HXLINE(  79)					_hx_tmp13 = null();
            				}
HXDLIN(  79)				_hx_tmp1 = (_hx_tmp13 == HX_("8",38,00,00,00));
            			}
            			else {
HXLINE(  79)				_hx_tmp1 = false;
            			}
HXDLIN(  79)			if (_hx_tmp1) {
HXLINE(  81)				_gthis->Parent->persistentUpdate = false;
HXLINE(  82)				::Global_obj::TrapDoorJustOpened = true;
HXLINE(  83)				_gthis->close();
            			}
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_6, ::TrapDoorCode,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_STACK_FRAME("TrapDoorCode","new",0xe4b925da,"TrapDoorCode.new","TrapDoorCode.hx",90,0x6aa3d2d6)
HXLINE(  91)			_gthis->Parent->persistentUpdate = false;
HXLINE(  92)			_gthis->close();
            		}
            		HX_END_LOCAL_FUNC0((void))

            	HX_STACK_FRAME("TrapDoorCode","new",0xe4b925da,"TrapDoorCode.new","TrapDoorCode.hx",28,0x6aa3d2d6)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(parent,"parent")
HXLINE(  27)		HX_VARI(  ::TrapDoorCode,_gthis) = hx::ObjectPtr<OBJ_>(this);
HXLINE(  29)		super::__construct(null());
HXLINE(  30)		this->Parent = parent;
HXLINE(  31)		this->Parent->persistentUpdate = false;
HXLINE(  33)		this->Background =  ::flixel::FlxSprite_obj::__new((int)0,(int)0,HX_("assets/images/trapdoorbg.png",86,5e,b4,ec));
HXLINE(  34)		this->add(this->Background);
HXLINE(  36)		this->button1 =  ::flixel::ui::FlxButton_obj::__new((int)0,(int)0,HX_("1",31,00,00,00), ::Dynamic(new _hx_Closure_0(_gthis)));
HXLINE(  40)		this->button1->set_x(((Float)213.33333333333334));
HXLINE(  41)		this->button1->set_y((int)360);
HXLINE(  42)		this->add(this->button1);
HXLINE(  44)		this->button2 =  ::flixel::ui::FlxButton_obj::__new((int)0,(int)0,HX_("1",31,00,00,00), ::Dynamic(new _hx_Closure_1(_gthis)));
HXLINE(  48)		this->button2->set_x(((Float)426.66666666666669));
HXLINE(  49)		this->button2->set_y((int)360);
HXLINE(  50)		this->add(this->button2);
HXLINE(  52)		this->button3 =  ::flixel::ui::FlxButton_obj::__new((int)0,(int)0,HX_("1",31,00,00,00), ::Dynamic(new _hx_Closure_2(_gthis)));
HXLINE(  56)		this->button3->set_x(((Float)640.));
HXLINE(  57)		this->button3->set_y((int)360);
HXLINE(  58)		this->add(this->button3);
HXLINE(  60)		this->button4 =  ::flixel::ui::FlxButton_obj::__new((int)0,(int)0,HX_("1",31,00,00,00), ::Dynamic(new _hx_Closure_3(_gthis)));
HXLINE(  64)		this->button4->set_x(((Float)853.33333333333337));
HXLINE(  65)		this->button4->set_y((int)360);
HXLINE(  66)		this->add(this->button4);
HXLINE(  68)		this->button5 =  ::flixel::ui::FlxButton_obj::__new((int)0,(int)0,HX_("1",31,00,00,00), ::Dynamic(new _hx_Closure_4(_gthis)));
HXLINE(  72)		this->button5->set_x(((Float)1066.6666666666667));
HXLINE(  73)		this->button5->set_y((int)360);
HXLINE(  74)		this->add(this->button5);
HXLINE(  76)		Float _hx_tmp = this->button1->get_height();
HXDLIN(  76)		this->confirmButton =  ::flixel::ui::FlxButton_obj::__new(((Float)640.),((int)360 + (_hx_tmp * (int)2)),HX_("Enter",f8,dc,b3,03), ::Dynamic(new _hx_Closure_5(_gthis)));
HXLINE(  86)		this->add(this->confirmButton);
HXLINE(  88)		Float _hx_tmp15 = this->button1->get_height();
HXDLIN(  88)		this->closeButton =  ::flixel::ui::FlxButton_obj::__new(((Float)640.),((int)360 + (_hx_tmp15 * (int)4)),HX_("Close",98,87,90,db), ::Dynamic(new _hx_Closure_6(_gthis)));
HXLINE(  94)		this->add(this->closeButton);
            	}

Dynamic TrapDoorCode_obj::__CreateEmpty() { return new TrapDoorCode_obj; }

hx::ObjectPtr< TrapDoorCode_obj > TrapDoorCode_obj::__new( ::flixel::FlxState parent)
{
	hx::ObjectPtr< TrapDoorCode_obj > _hx_result = new TrapDoorCode_obj();
	_hx_result->__construct(parent);
	return _hx_result;
}

Dynamic TrapDoorCode_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< TrapDoorCode_obj > _hx_result = new TrapDoorCode_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

void TrapDoorCode_obj::buttonCycle( ::flixel::ui::FlxButton button){
            	HX_STACK_FRAME("TrapDoorCode","buttonCycle",0x9eeadcce,"TrapDoorCode.buttonCycle","TrapDoorCode.hx",99,0x6aa3d2d6)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(button,"button")
HXLINE(  99)		::String _hx_tmp;
HXDLIN(  99)		Bool _hx_tmp1 = hx::IsNotNull( button->label );
HXDLIN(  99)		if (_hx_tmp1) {
HXLINE(  99)			_hx_tmp = button->label->text;
            		}
            		else {
HXLINE(  99)			_hx_tmp = null();
            		}
HXDLIN(  99)		if ((_hx_tmp == HX_("1",31,00,00,00))) {
HXLINE( 101)			Bool _hx_tmp2 = hx::IsNull( button->label );
HXDLIN( 101)			if (_hx_tmp2) {
HXLINE( 101)				Float _hx_tmp3 = (button->x + button->labelOffsets->__get((int)0).StaticCast<  ::flixel::math::FlxPoint >()->x);
HXDLIN( 101)				Float _hx_tmp4 = (button->y + button->labelOffsets->__get((int)0).StaticCast<  ::flixel::math::FlxPoint >()->y);
HXDLIN( 101)				button->set_label( ::flixel::text::FlxText_obj::__new(_hx_tmp3,_hx_tmp4,(int)80,HX_("2",32,00,00,00),null(),null()));
HXDLIN( 101)				button->label->setFormat(null(),(int)8,(int)3355443,HX_("center",d5,25,db,05),null(),null(),null());
HXDLIN( 101)				Float _hx_tmp5 = button->labelAlphas->__get(button->status);
HXDLIN( 101)				button->label->set_alpha(_hx_tmp5);
HXDLIN( 101)				button->label->drawFrame(true);
            			}
            			else {
HXLINE( 101)				button->label->set_text(HX_("2",32,00,00,00));
            			}
            		}
            		else {
HXLINE( 103)			::String _hx_tmp6;
HXDLIN( 103)			Bool _hx_tmp7 = hx::IsNotNull( button->label );
HXDLIN( 103)			if (_hx_tmp7) {
HXLINE( 103)				_hx_tmp6 = button->label->text;
            			}
            			else {
HXLINE( 103)				_hx_tmp6 = null();
            			}
HXDLIN( 103)			if ((_hx_tmp6 == HX_("2",32,00,00,00))) {
HXLINE( 105)				Bool _hx_tmp8 = hx::IsNull( button->label );
HXDLIN( 105)				if (_hx_tmp8) {
HXLINE( 105)					Float _hx_tmp9 = (button->x + button->labelOffsets->__get((int)0).StaticCast<  ::flixel::math::FlxPoint >()->x);
HXDLIN( 105)					Float _hx_tmp10 = (button->y + button->labelOffsets->__get((int)0).StaticCast<  ::flixel::math::FlxPoint >()->y);
HXDLIN( 105)					button->set_label( ::flixel::text::FlxText_obj::__new(_hx_tmp9,_hx_tmp10,(int)80,HX_("3",33,00,00,00),null(),null()));
HXDLIN( 105)					button->label->setFormat(null(),(int)8,(int)3355443,HX_("center",d5,25,db,05),null(),null(),null());
HXDLIN( 105)					Float _hx_tmp11 = button->labelAlphas->__get(button->status);
HXDLIN( 105)					button->label->set_alpha(_hx_tmp11);
HXDLIN( 105)					button->label->drawFrame(true);
            				}
            				else {
HXLINE( 105)					button->label->set_text(HX_("3",33,00,00,00));
            				}
            			}
            			else {
HXLINE( 107)				::String _hx_tmp12;
HXDLIN( 107)				Bool _hx_tmp13 = hx::IsNotNull( button->label );
HXDLIN( 107)				if (_hx_tmp13) {
HXLINE( 107)					_hx_tmp12 = button->label->text;
            				}
            				else {
HXLINE( 107)					_hx_tmp12 = null();
            				}
HXDLIN( 107)				if ((_hx_tmp12 == HX_("3",33,00,00,00))) {
HXLINE( 109)					Bool _hx_tmp14 = hx::IsNull( button->label );
HXDLIN( 109)					if (_hx_tmp14) {
HXLINE( 109)						Float _hx_tmp15 = (button->x + button->labelOffsets->__get((int)0).StaticCast<  ::flixel::math::FlxPoint >()->x);
HXDLIN( 109)						Float _hx_tmp16 = (button->y + button->labelOffsets->__get((int)0).StaticCast<  ::flixel::math::FlxPoint >()->y);
HXDLIN( 109)						button->set_label( ::flixel::text::FlxText_obj::__new(_hx_tmp15,_hx_tmp16,(int)80,HX_("4",34,00,00,00),null(),null()));
HXDLIN( 109)						button->label->setFormat(null(),(int)8,(int)3355443,HX_("center",d5,25,db,05),null(),null(),null());
HXDLIN( 109)						Float _hx_tmp17 = button->labelAlphas->__get(button->status);
HXDLIN( 109)						button->label->set_alpha(_hx_tmp17);
HXDLIN( 109)						button->label->drawFrame(true);
            					}
            					else {
HXLINE( 109)						button->label->set_text(HX_("4",34,00,00,00));
            					}
            				}
            				else {
HXLINE( 111)					::String _hx_tmp18;
HXDLIN( 111)					Bool _hx_tmp19 = hx::IsNotNull( button->label );
HXDLIN( 111)					if (_hx_tmp19) {
HXLINE( 111)						_hx_tmp18 = button->label->text;
            					}
            					else {
HXLINE( 111)						_hx_tmp18 = null();
            					}
HXDLIN( 111)					if ((_hx_tmp18 == HX_("4",34,00,00,00))) {
HXLINE( 113)						Bool _hx_tmp20 = hx::IsNull( button->label );
HXDLIN( 113)						if (_hx_tmp20) {
HXLINE( 113)							Float _hx_tmp21 = (button->x + button->labelOffsets->__get((int)0).StaticCast<  ::flixel::math::FlxPoint >()->x);
HXDLIN( 113)							Float _hx_tmp22 = (button->y + button->labelOffsets->__get((int)0).StaticCast<  ::flixel::math::FlxPoint >()->y);
HXDLIN( 113)							button->set_label( ::flixel::text::FlxText_obj::__new(_hx_tmp21,_hx_tmp22,(int)80,HX_("5",35,00,00,00),null(),null()));
HXDLIN( 113)							button->label->setFormat(null(),(int)8,(int)3355443,HX_("center",d5,25,db,05),null(),null(),null());
HXDLIN( 113)							Float _hx_tmp23 = button->labelAlphas->__get(button->status);
HXDLIN( 113)							button->label->set_alpha(_hx_tmp23);
HXDLIN( 113)							button->label->drawFrame(true);
            						}
            						else {
HXLINE( 113)							button->label->set_text(HX_("5",35,00,00,00));
            						}
            					}
            					else {
HXLINE( 115)						::String _hx_tmp24;
HXDLIN( 115)						Bool _hx_tmp25 = hx::IsNotNull( button->label );
HXDLIN( 115)						if (_hx_tmp25) {
HXLINE( 115)							_hx_tmp24 = button->label->text;
            						}
            						else {
HXLINE( 115)							_hx_tmp24 = null();
            						}
HXDLIN( 115)						if ((_hx_tmp24 == HX_("5",35,00,00,00))) {
HXLINE( 117)							Bool _hx_tmp26 = hx::IsNull( button->label );
HXDLIN( 117)							if (_hx_tmp26) {
HXLINE( 117)								Float _hx_tmp27 = (button->x + button->labelOffsets->__get((int)0).StaticCast<  ::flixel::math::FlxPoint >()->x);
HXDLIN( 117)								Float _hx_tmp28 = (button->y + button->labelOffsets->__get((int)0).StaticCast<  ::flixel::math::FlxPoint >()->y);
HXDLIN( 117)								button->set_label( ::flixel::text::FlxText_obj::__new(_hx_tmp27,_hx_tmp28,(int)80,HX_("6",36,00,00,00),null(),null()));
HXDLIN( 117)								button->label->setFormat(null(),(int)8,(int)3355443,HX_("center",d5,25,db,05),null(),null(),null());
HXDLIN( 117)								Float _hx_tmp29 = button->labelAlphas->__get(button->status);
HXDLIN( 117)								button->label->set_alpha(_hx_tmp29);
HXDLIN( 117)								button->label->drawFrame(true);
            							}
            							else {
HXLINE( 117)								button->label->set_text(HX_("6",36,00,00,00));
            							}
            						}
            						else {
HXLINE( 119)							::String _hx_tmp30;
HXDLIN( 119)							Bool _hx_tmp31 = hx::IsNotNull( button->label );
HXDLIN( 119)							if (_hx_tmp31) {
HXLINE( 119)								_hx_tmp30 = button->label->text;
            							}
            							else {
HXLINE( 119)								_hx_tmp30 = null();
            							}
HXDLIN( 119)							if ((_hx_tmp30 == HX_("6",36,00,00,00))) {
HXLINE( 121)								Bool _hx_tmp32 = hx::IsNull( button->label );
HXDLIN( 121)								if (_hx_tmp32) {
HXLINE( 121)									Float _hx_tmp33 = (button->x + button->labelOffsets->__get((int)0).StaticCast<  ::flixel::math::FlxPoint >()->x);
HXDLIN( 121)									Float _hx_tmp34 = (button->y + button->labelOffsets->__get((int)0).StaticCast<  ::flixel::math::FlxPoint >()->y);
HXDLIN( 121)									button->set_label( ::flixel::text::FlxText_obj::__new(_hx_tmp33,_hx_tmp34,(int)80,HX_("7",37,00,00,00),null(),null()));
HXDLIN( 121)									button->label->setFormat(null(),(int)8,(int)3355443,HX_("center",d5,25,db,05),null(),null(),null());
HXDLIN( 121)									Float _hx_tmp35 = button->labelAlphas->__get(button->status);
HXDLIN( 121)									button->label->set_alpha(_hx_tmp35);
HXDLIN( 121)									button->label->drawFrame(true);
            								}
            								else {
HXLINE( 121)									button->label->set_text(HX_("7",37,00,00,00));
            								}
            							}
            							else {
HXLINE( 123)								::String _hx_tmp36;
HXDLIN( 123)								Bool _hx_tmp37 = hx::IsNotNull( button->label );
HXDLIN( 123)								if (_hx_tmp37) {
HXLINE( 123)									_hx_tmp36 = button->label->text;
            								}
            								else {
HXLINE( 123)									_hx_tmp36 = null();
            								}
HXDLIN( 123)								if ((_hx_tmp36 == HX_("7",37,00,00,00))) {
HXLINE( 125)									Bool _hx_tmp38 = hx::IsNull( button->label );
HXDLIN( 125)									if (_hx_tmp38) {
HXLINE( 125)										Float _hx_tmp39 = (button->x + button->labelOffsets->__get((int)0).StaticCast<  ::flixel::math::FlxPoint >()->x);
HXDLIN( 125)										Float _hx_tmp40 = (button->y + button->labelOffsets->__get((int)0).StaticCast<  ::flixel::math::FlxPoint >()->y);
HXDLIN( 125)										button->set_label( ::flixel::text::FlxText_obj::__new(_hx_tmp39,_hx_tmp40,(int)80,HX_("8",38,00,00,00),null(),null()));
HXDLIN( 125)										button->label->setFormat(null(),(int)8,(int)3355443,HX_("center",d5,25,db,05),null(),null(),null());
HXDLIN( 125)										Float _hx_tmp41 = button->labelAlphas->__get(button->status);
HXDLIN( 125)										button->label->set_alpha(_hx_tmp41);
HXDLIN( 125)										button->label->drawFrame(true);
            									}
            									else {
HXLINE( 125)										button->label->set_text(HX_("8",38,00,00,00));
            									}
            								}
            								else {
HXLINE( 127)									::String _hx_tmp42;
HXDLIN( 127)									Bool _hx_tmp43 = hx::IsNotNull( button->label );
HXDLIN( 127)									if (_hx_tmp43) {
HXLINE( 127)										_hx_tmp42 = button->label->text;
            									}
            									else {
HXLINE( 127)										_hx_tmp42 = null();
            									}
HXDLIN( 127)									if ((_hx_tmp42 == HX_("8",38,00,00,00))) {
HXLINE( 129)										Bool _hx_tmp44 = hx::IsNull( button->label );
HXDLIN( 129)										if (_hx_tmp44) {
HXLINE( 129)											Float _hx_tmp45 = (button->x + button->labelOffsets->__get((int)0).StaticCast<  ::flixel::math::FlxPoint >()->x);
HXDLIN( 129)											Float _hx_tmp46 = (button->y + button->labelOffsets->__get((int)0).StaticCast<  ::flixel::math::FlxPoint >()->y);
HXDLIN( 129)											button->set_label( ::flixel::text::FlxText_obj::__new(_hx_tmp45,_hx_tmp46,(int)80,HX_("9",39,00,00,00),null(),null()));
HXDLIN( 129)											button->label->setFormat(null(),(int)8,(int)3355443,HX_("center",d5,25,db,05),null(),null(),null());
HXDLIN( 129)											Float _hx_tmp47 = button->labelAlphas->__get(button->status);
HXDLIN( 129)											button->label->set_alpha(_hx_tmp47);
HXDLIN( 129)											button->label->drawFrame(true);
            										}
            										else {
HXLINE( 129)											button->label->set_text(HX_("9",39,00,00,00));
            										}
            									}
            									else {
HXLINE( 131)										::String _hx_tmp48;
HXDLIN( 131)										Bool _hx_tmp49 = hx::IsNotNull( button->label );
HXDLIN( 131)										if (_hx_tmp49) {
HXLINE( 131)											_hx_tmp48 = button->label->text;
            										}
            										else {
HXLINE( 131)											_hx_tmp48 = null();
            										}
HXDLIN( 131)										if ((_hx_tmp48 == HX_("9",39,00,00,00))) {
HXLINE( 133)											Bool _hx_tmp50 = hx::IsNull( button->label );
HXDLIN( 133)											if (_hx_tmp50) {
HXLINE( 133)												Float _hx_tmp51 = (button->x + button->labelOffsets->__get((int)0).StaticCast<  ::flixel::math::FlxPoint >()->x);
HXDLIN( 133)												Float _hx_tmp52 = (button->y + button->labelOffsets->__get((int)0).StaticCast<  ::flixel::math::FlxPoint >()->y);
HXDLIN( 133)												button->set_label( ::flixel::text::FlxText_obj::__new(_hx_tmp51,_hx_tmp52,(int)80,HX_("1",31,00,00,00),null(),null()));
HXDLIN( 133)												button->label->setFormat(null(),(int)8,(int)3355443,HX_("center",d5,25,db,05),null(),null(),null());
HXDLIN( 133)												Float _hx_tmp53 = button->labelAlphas->__get(button->status);
HXDLIN( 133)												button->label->set_alpha(_hx_tmp53);
HXDLIN( 133)												button->label->drawFrame(true);
            											}
            											else {
HXLINE( 133)												button->label->set_text(HX_("1",31,00,00,00));
            											}
            										}
            									}
            								}
            							}
            						}
            					}
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(TrapDoorCode_obj,buttonCycle,(void))


TrapDoorCode_obj::TrapDoorCode_obj()
{
}

void TrapDoorCode_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(TrapDoorCode);
	HX_MARK_MEMBER_NAME(Parent,"Parent");
	HX_MARK_MEMBER_NAME(button1,"button1");
	HX_MARK_MEMBER_NAME(button2,"button2");
	HX_MARK_MEMBER_NAME(button3,"button3");
	HX_MARK_MEMBER_NAME(button4,"button4");
	HX_MARK_MEMBER_NAME(button5,"button5");
	HX_MARK_MEMBER_NAME(confirmButton,"confirmButton");
	HX_MARK_MEMBER_NAME(closeButton,"closeButton");
	HX_MARK_MEMBER_NAME(Background,"Background");
	 ::flixel::FlxSubState_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void TrapDoorCode_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(Parent,"Parent");
	HX_VISIT_MEMBER_NAME(button1,"button1");
	HX_VISIT_MEMBER_NAME(button2,"button2");
	HX_VISIT_MEMBER_NAME(button3,"button3");
	HX_VISIT_MEMBER_NAME(button4,"button4");
	HX_VISIT_MEMBER_NAME(button5,"button5");
	HX_VISIT_MEMBER_NAME(confirmButton,"confirmButton");
	HX_VISIT_MEMBER_NAME(closeButton,"closeButton");
	HX_VISIT_MEMBER_NAME(Background,"Background");
	 ::flixel::FlxSubState_obj::__Visit(HX_VISIT_ARG);
}

hx::Val TrapDoorCode_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"Parent") ) { return hx::Val( Parent); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"button1") ) { return hx::Val( button1); }
		if (HX_FIELD_EQ(inName,"button2") ) { return hx::Val( button2); }
		if (HX_FIELD_EQ(inName,"button3") ) { return hx::Val( button3); }
		if (HX_FIELD_EQ(inName,"button4") ) { return hx::Val( button4); }
		if (HX_FIELD_EQ(inName,"button5") ) { return hx::Val( button5); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"Background") ) { return hx::Val( Background); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"closeButton") ) { return hx::Val( closeButton); }
		if (HX_FIELD_EQ(inName,"buttonCycle") ) { return hx::Val( buttonCycle_dyn()); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"confirmButton") ) { return hx::Val( confirmButton); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val TrapDoorCode_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"Parent") ) { Parent=inValue.Cast<  ::flixel::FlxState >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"button1") ) { button1=inValue.Cast<  ::flixel::ui::FlxButton >(); return inValue; }
		if (HX_FIELD_EQ(inName,"button2") ) { button2=inValue.Cast<  ::flixel::ui::FlxButton >(); return inValue; }
		if (HX_FIELD_EQ(inName,"button3") ) { button3=inValue.Cast<  ::flixel::ui::FlxButton >(); return inValue; }
		if (HX_FIELD_EQ(inName,"button4") ) { button4=inValue.Cast<  ::flixel::ui::FlxButton >(); return inValue; }
		if (HX_FIELD_EQ(inName,"button5") ) { button5=inValue.Cast<  ::flixel::ui::FlxButton >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"Background") ) { Background=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"closeButton") ) { closeButton=inValue.Cast<  ::flixel::ui::FlxButton >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"confirmButton") ) { confirmButton=inValue.Cast<  ::flixel::ui::FlxButton >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void TrapDoorCode_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("Parent","\x4a","\x79","\x12","\x22"));
	outFields->push(HX_HCSTRING("button1","\xff","\x51","\x75","\xca"));
	outFields->push(HX_HCSTRING("button2","\x00","\x52","\x75","\xca"));
	outFields->push(HX_HCSTRING("button3","\x01","\x52","\x75","\xca"));
	outFields->push(HX_HCSTRING("button4","\x02","\x52","\x75","\xca"));
	outFields->push(HX_HCSTRING("button5","\x03","\x52","\x75","\xca"));
	outFields->push(HX_HCSTRING("confirmButton","\x12","\x33","\x42","\x39"));
	outFields->push(HX_HCSTRING("closeButton","\xca","\x87","\x30","\x94"));
	outFields->push(HX_HCSTRING("Background","\x0e","\x98","\xce","\x1c"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo TrapDoorCode_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::flixel::FlxState*/ ,(int)offsetof(TrapDoorCode_obj,Parent),HX_HCSTRING("Parent","\x4a","\x79","\x12","\x22")},
	{hx::fsObject /*::flixel::ui::FlxButton*/ ,(int)offsetof(TrapDoorCode_obj,button1),HX_HCSTRING("button1","\xff","\x51","\x75","\xca")},
	{hx::fsObject /*::flixel::ui::FlxButton*/ ,(int)offsetof(TrapDoorCode_obj,button2),HX_HCSTRING("button2","\x00","\x52","\x75","\xca")},
	{hx::fsObject /*::flixel::ui::FlxButton*/ ,(int)offsetof(TrapDoorCode_obj,button3),HX_HCSTRING("button3","\x01","\x52","\x75","\xca")},
	{hx::fsObject /*::flixel::ui::FlxButton*/ ,(int)offsetof(TrapDoorCode_obj,button4),HX_HCSTRING("button4","\x02","\x52","\x75","\xca")},
	{hx::fsObject /*::flixel::ui::FlxButton*/ ,(int)offsetof(TrapDoorCode_obj,button5),HX_HCSTRING("button5","\x03","\x52","\x75","\xca")},
	{hx::fsObject /*::flixel::ui::FlxButton*/ ,(int)offsetof(TrapDoorCode_obj,confirmButton),HX_HCSTRING("confirmButton","\x12","\x33","\x42","\x39")},
	{hx::fsObject /*::flixel::ui::FlxButton*/ ,(int)offsetof(TrapDoorCode_obj,closeButton),HX_HCSTRING("closeButton","\xca","\x87","\x30","\x94")},
	{hx::fsObject /*::flixel::FlxSprite*/ ,(int)offsetof(TrapDoorCode_obj,Background),HX_HCSTRING("Background","\x0e","\x98","\xce","\x1c")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *TrapDoorCode_obj_sStaticStorageInfo = 0;
#endif

static ::String TrapDoorCode_obj_sMemberFields[] = {
	HX_HCSTRING("Parent","\x4a","\x79","\x12","\x22"),
	HX_HCSTRING("button1","\xff","\x51","\x75","\xca"),
	HX_HCSTRING("button2","\x00","\x52","\x75","\xca"),
	HX_HCSTRING("button3","\x01","\x52","\x75","\xca"),
	HX_HCSTRING("button4","\x02","\x52","\x75","\xca"),
	HX_HCSTRING("button5","\x03","\x52","\x75","\xca"),
	HX_HCSTRING("confirmButton","\x12","\x33","\x42","\x39"),
	HX_HCSTRING("closeButton","\xca","\x87","\x30","\x94"),
	HX_HCSTRING("Background","\x0e","\x98","\xce","\x1c"),
	HX_HCSTRING("buttonCycle","\x54","\x7d","\x9c","\x9e"),
	::String(null()) };

static void TrapDoorCode_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(TrapDoorCode_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void TrapDoorCode_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(TrapDoorCode_obj::__mClass,"__mClass");
};

#endif

hx::Class TrapDoorCode_obj::__mClass;

void TrapDoorCode_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("TrapDoorCode","\xe8","\xf0","\xce","\x86");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = TrapDoorCode_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(TrapDoorCode_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< TrapDoorCode_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = TrapDoorCode_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TrapDoorCode_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TrapDoorCode_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

